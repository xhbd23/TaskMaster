[versions]
agp = "8.1.2"
li-utils = "0.0.0.2"
abc = "10"
org-jetbrains-kotlin-android = "1.9.0"
core-ktx = "1.9.0"
junit = "4.13.2"
androidx-test-ext-junit = "1.1.5"
espresso-core = "3.5.1"
appcompat = "1.6.1"
material = "1.8.0"

okhttp3                       = "4.10.0"
retrofit                      = "2.9.0"


ksp                           = "1.9.0-1.0.13"
room                          = "2.5.2"
coroutines                    = "1.7.2"
# activity extensions
activity-ktx                  = "1.7.0"
# fragment extensions
fragment-ktx                  = "1.6.1"
lifecycle                     = "2.6.1"
work-runtime-ktx = "2.8.1"


[libraries]
androidx-work-runtime-ktx = { module = "androidx.work:work-runtime-ktx", version.ref = "work-runtime-ktx" }
core-ktx = { group = "androidx.core", name = "core-ktx", version.ref = "core-ktx" }
junit = { group = "junit", name = "junit", version.ref = "junit" }
androidx-test-ext-junit = { group = "androidx.test.ext", name = "junit", version.ref = "androidx-test-ext-junit" }
espresso-core = { group = "androidx.test.espresso", name = "espresso-core", version.ref = "espresso-core" }
appcompat = { group = "androidx.appcompat", name = "appcompat", version.ref = "appcompat" }
li-utils = { module = "com.github.YeMengLiChou:LiUtils", version.ref = "li-utils" }
material = { group = "com.google.android.material", name = "material", version.ref = "material" }


# activityKtx
activity-ktx                  = { group = "androidx.activity", name = "activity-ktx", version.ref = "activity-ktx" }
# fragmentKtx
fragment-ktx                   = { group = "androidx.fragment", name = "fragment-ktx", version.ref = "fragment-ktx"}
# retrofit
retrofit                      = { group = "com.squareup.retrofit2", name = "retrofit", version.ref = "retrofit" }
# retrofit gson converter
retrofit-moshi                = { group = "com.squareup.retrofit2", name = "converter-moshi", version.ref = "retrofit" }

# okhttp3
okhttp                        = { group = "com.squareup.okhttp3", name = "okhttp", version.ref = "okhttp3" }
# okhttp logging interceptor
okhttp-logging-interceptor    = { group = "com.squareup.okhttp3", name = "logging-interceptor", version.ref = "okhttp3" }

# viewModel
viewmodel                     = { group = "androidx.lifecycle", name = "lifecycle-viewmodel-ktx", version.ref = "lifecycle" }
viewmodel-savedstate          = { group = "androidx.lifecycle", name = "lifecycle-viewmodel-savedstate", version.ref = "lifecycle" }

lifecycle-runtime             = { group = "androidx.lifecycle", name = "lifecycle-runtime-ktx", version.ref = "lifecycle" }
# ksp annotation processor
lifecycle-compiler            = { group = "androidx.lifecycle", name = "lifecycle-compiler", version.ref = "lifecycle" }

# room
room-runtime                  = { group = "androidx.room", name = "room-runtime", version.ref = "room" }
# use kapt annotation processor
room-compiler                 = { group = "androidx.room", name = "room-compiler", version.ref = "room" }
# room coroutines
room-ktx                      = { group = "androidx.room", name = "room-ktx", version.ref = "room" }

# coroutines core
coroutines-core               = { group = "org.jetbrains.kotlinx", name = "kotlinx-coroutines-core", version.ref = "coroutines" }
# coroutines for android
coroutines-android            = { group = "org.jetbrains.kotlinx", name = "kotlinx-coroutines-android", version.ref = "coroutines" }


[plugins]
com-android-application = { id = "com.android.application", version.ref = "agp" }
org-jetbrains-kotlin-android = { id = "org.jetbrains.kotlin.android", version.ref = "org-jetbrains-kotlin-android" }
com-google-devtools-ksp       = { id = "com.google.devtools.ksp", version.ref = "ksp"}


[bundles]
coroutines                    = ["coroutines-core", "coroutines-android"]
viewModel                     = ["viewmodel", "viewmodel-savedstate"]
retrofit                      = ["retrofit", "retrofit-moshi", "okhttp-logging-interceptor"]
